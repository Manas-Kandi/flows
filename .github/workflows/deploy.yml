name: Deploy

on:
  push:
    branches: [main]
    tags:
      - 'v*'

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build and push images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/flows-web:$IMAGE_TAG ./apps/web
          docker push $ECR_REGISTRY/flows-web:$IMAGE_TAG
          
          docker build -t $ECR_REGISTRY/flows-collaboration:$IMAGE_TAG ./services/collaboration
          docker push $ECR_REGISTRY/flows-collaboration:$IMAGE_TAG
          
          docker build -t $ECR_REGISTRY/flows-geometry:$IMAGE_TAG ./services/geometry
          docker push $ECR_REGISTRY/flows-geometry:$IMAGE_TAG
          
      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --name flows-staging --region us-east-1
          kubectl set image deployment/web web=$ECR_REGISTRY/flows-web:$IMAGE_TAG
          kubectl set image deployment/collaboration collaboration=$ECR_REGISTRY/flows-collaboration:$IMAGE_TAG
          kubectl set image deployment/geometry geometry=$ECR_REGISTRY/flows-geometry:$IMAGE_TAG
          kubectl rollout status deployment/web
          kubectl rollout status deployment/collaboration
          kubectl rollout status deployment/geometry

  deploy-production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    needs: deploy-staging
    
    steps:
      - uses: actions/checkout@v4
      
      # Similar steps as staging but targeting production environment
      - name: Deploy to production
        run: echo "Deploy to production"
